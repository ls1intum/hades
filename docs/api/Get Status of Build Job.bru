meta {
  name: Get Status of Build Job
  type: http
  seq: 2
}

get {
  url: http://{{hostname}}/task/:id
  body: json
  auth: none
}

params:path {
  id: 08df9951-1a86-4ac4-ac7a-7c3ec5d322af
}

body:json {
  {
    "name": "Example Job",
    "metadata": {}, // global metadata
    "timestamp": "2021-01-01T00:00:00.000Z",
    "priority": 3, // optional, default 3
    "steps": [
      {
        "id": 1, // mandatory to declare the order of execution
        "name": "Clone",
        "image": "ghcr.io/ls1intum/hades/hades-clone-container:latest", // mandatory
        "metadata": {
          "REPOSITORY_DIR": "/shared",
          "HADES_TEST_USERNAME": "{{user}}",
          "HADES_TEST_PASSWORD": "{{password}}",
          "HADES_TEST_URL": "{{test_repo}}",
          "HADES_TEST_PATH": "./example",
          "HADES_TEST_ORDER": "1",
          "HADES_ASSIGNMENT_USERNAME": "{{user}}",
          "HADES_ASSIGNMENT_PASSWORD": "{{password}}",
          "HADES_ASSIGNMENT_URL": "{{assignment_repo}}",
          "HADES_ASSIGNMENT_PATH": "./example/assignment",
          "HADES_ASSIGNMENT_ORDER": "2"
        }
      },
      {
        "id": 2, // mandatory to declare the order of execution
        "name": "Execute",
        "image": "ls1tum/artemis-maven-template:java17-18", // mandatory
        "script": "cd ./example && ./gradlew --status && ./gradlew clean test"
      }
    ]
  }
}

vars:pre-request {
  user: {{process.env.USERNAME}}
  password: {{process.env.PASSWORD}}
  test_repo: {{process.env.TEST_REPO}}
  assignment_repo: {{process.env.ASSIGNMENT_REPO}}
}
